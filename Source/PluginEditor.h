/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#ifndef __PLUGINEDITOR_H_EA17EABC__
#define __PLUGINEDITOR_H_EA17EABC__

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"


//==============================================================================
/**
*/
class SoundAnalyserAudioProcessorEditor  : public AudioProcessorEditor, public Button::Listener, public Timer
{
public:
    SoundAnalyserAudioProcessorEditor (SoundAnalyserAudioProcessor* ownerFilter);
    ~SoundAnalyserAudioProcessorEditor();

    //==============================================================================
    // This is just a standard Juce paint method...
    void paint (Graphics& g);
    
    void resized();
    
    void buttonClicked (Button* button);
    
    void timerCallback();
    
private:
    
    SoundAnalyserAudioProcessor* getProcessor() const
    {
        return static_cast <SoundAnalyserAudioProcessor*> (getAudioProcessor());
    }
    
    TextButton sendRMSButton;
    TextButton sendPeakButton;
    TextButton sendSpectralCentroidButton;
    
    Label RMSLabel;
    Label peakLabel;
    Label spectralCentroidLabel;
    
    int plotX, plotY, plotHeight;
    
    void setupAnalysisComponents(TextButton *button,Label *label,String labelText);
};


#endif  // __PLUGINEDITOR_H_EA17EABC__
